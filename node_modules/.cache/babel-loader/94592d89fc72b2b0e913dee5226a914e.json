{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\react-weather-project\\\\react-weather-project\\\\react-weather-project\\\\src\\\\WeatherSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nexport default function WeatherSearch() {\n  _s();\n\n  let [city, setCity] = useState(\"\");\n  let [temperature, setTemperature] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n  let [weather, setWeather] = useState(\"\");\n\n  function displayWeather(response) {\n    setLoaded(true);\n    setWeather({\n      temperature: response.data.main.temp,\n      wind: response.data.wind.speed,\n      humidity: response.data.main.humidity,\n      icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n      description: response.data.weather[0].description\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let apiKey = \"3178cd4dc212e1aed68087c7e06933d5\";\n    let units = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(displayWeather);\n  }\n\n  function updateCity(event) {\n    setCity(event.target.value);\n  }\n\n  let form = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Enter a city..\",\n      onChange: updateCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"Submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [form, /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperature: \", Math.round(weather.temperature), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Description: \", weather.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Humidity: \", weather.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Wind: \", weather.wind, \"km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: weather.icon,\n            alt: weather.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  } else {\n    return form;\n  }\n}\n\n_s(WeatherSearch, \"lXCtHvfTb4X0Hnymy9fqyaeu0nU=\");\n\n_c = WeatherSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherSearch\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/react-weather-project/react-weather-project/react-weather-project/src/WeatherSearch.js"],"names":["React","useState","axios","WeatherSearch","city","setCity","temperature","setTemperature","loaded","setLoaded","weather","setWeather","displayWeather","response","data","main","temp","wind","speed","humidity","icon","description","handleSubmit","event","preventDefault","apiKey","units","apiUrl","get","then","updateCity","target","value","form","Math","round"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\nexport default function WeatherSearch() {\r\n  let [city, setCity] = useState(\"\");\r\n  let [temperature, setTemperature] = useState(null);\r\n  let [loaded, setLoaded] = useState(false);\r\n  let [weather, setWeather] = useState(\"\");\r\n  function displayWeather(response) {\r\n    setLoaded(true);\r\n    setWeather({\r\n      temperature: response.data.main.temp,\r\n      wind: response.data.wind.speed,\r\n      humidity: response.data.main.humidity,\r\n      icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\r\n      description: response.data.weather[0].description\r\n    });\r\n  }\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    let apiKey = \"3178cd4dc212e1aed68087c7e06933d5\";\r\n    let units = \"metric\";\r\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\r\n    axios.get(apiUrl).then(displayWeather);\r\n  }\r\n  function updateCity(event) {\r\n    setCity(event.target.value);\r\n  }\r\n  let form = (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"search\" placeholder=\"Enter a city..\" onChange={updateCity} />\r\n      <button type=\"Submit\">Search</button>\r\n    </form>\r\n  );\r\n  if (loaded) {\r\n    return (\r\n      <div>\r\n        {form}\r\n        <ul>\r\n          <li>Temperature: {Math.round(weather.temperature)}Â°C</li>\r\n          <li>Description: {weather.description}</li>\r\n          <li>Humidity: {weather.humidity}%</li>\r\n          <li>Wind: {weather.wind}km/h</li>\r\n          <li>\r\n            <img src={weather.icon} alt={weather.description} />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  } else {\r\n    return form;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}